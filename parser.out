Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> S
Rule 1     S -> SBL A
Rule 2     A -> text B
Rule 3     B -> text B
Rule 4     B -> keyId C
Rule 5     B -> SBR M
Rule 6     C -> idValue D
Rule 7     D -> text E
Rule 8     E -> text E
Rule 9     E -> idNombre F
Rule 10    F -> valueNombre G
Rule 11    G -> text H
Rule 12    H -> text H
Rule 13    H -> idEmail I
Rule 14    I -> valueEmail J
Rule 15    J -> text K
Rule 16    K -> text K
Rule 17    K -> idTelefono L
Rule 18    L -> valueTelefono A
Rule 19    M -> <empty>

Terminals, with rules where they appear

SBL                  : 1
SBR                  : 5
error                : 
idEmail              : 13
idNombre             : 9
idTelefono           : 17
idValue              : 6
keyId                : 4
text                 : 2 3 7 8 11 12 15 16
valueEmail           : 14
valueNombre          : 10
valueTelefono        : 18

Nonterminals, with rules where they appear

A                    : 1 18
B                    : 2 3
C                    : 4
D                    : 6
E                    : 7 8
F                    : 9
G                    : 10
H                    : 11 12
I                    : 13
J                    : 14
K                    : 15 16
L                    : 17
M                    : 5
S                    : 0

Parsing method: LALR

state 0

    (0) S' -> . S
    (1) S -> . SBL A

    SBL             shift and go to state 2

    S                              shift and go to state 1

state 1

    (0) S' -> S .



state 2

    (1) S -> SBL . A
    (2) A -> . text B

    text            shift and go to state 4

    A                              shift and go to state 3

state 3

    (1) S -> SBL A .

    $end            reduce using rule 1 (S -> SBL A .)


state 4

    (2) A -> text . B
    (3) B -> . text B
    (4) B -> . keyId C
    (5) B -> . SBR M

    text            shift and go to state 5
    keyId           shift and go to state 7
    SBR             shift and go to state 8

    B                              shift and go to state 6

state 5

    (3) B -> text . B
    (3) B -> . text B
    (4) B -> . keyId C
    (5) B -> . SBR M

    text            shift and go to state 5
    keyId           shift and go to state 7
    SBR             shift and go to state 8

    B                              shift and go to state 9

state 6

    (2) A -> text B .

    $end            reduce using rule 2 (A -> text B .)


state 7

    (4) B -> keyId . C
    (6) C -> . idValue D

    idValue         shift and go to state 11

    C                              shift and go to state 10

state 8

    (5) B -> SBR . M
    (19) M -> .

    $end            reduce using rule 19 (M -> .)

    M                              shift and go to state 12

state 9

    (3) B -> text B .

    $end            reduce using rule 3 (B -> text B .)


state 10

    (4) B -> keyId C .

    $end            reduce using rule 4 (B -> keyId C .)


state 11

    (6) C -> idValue . D
    (7) D -> . text E

    text            shift and go to state 14

    D                              shift and go to state 13

state 12

    (5) B -> SBR M .

    $end            reduce using rule 5 (B -> SBR M .)


state 13

    (6) C -> idValue D .

    $end            reduce using rule 6 (C -> idValue D .)


state 14

    (7) D -> text . E
    (8) E -> . text E
    (9) E -> . idNombre F

    text            shift and go to state 15
    idNombre        shift and go to state 17

    E                              shift and go to state 16

state 15

    (8) E -> text . E
    (8) E -> . text E
    (9) E -> . idNombre F

    text            shift and go to state 15
    idNombre        shift and go to state 17

    E                              shift and go to state 18

state 16

    (7) D -> text E .

    $end            reduce using rule 7 (D -> text E .)


state 17

    (9) E -> idNombre . F
    (10) F -> . valueNombre G

    valueNombre     shift and go to state 20

    F                              shift and go to state 19

state 18

    (8) E -> text E .

    $end            reduce using rule 8 (E -> text E .)


state 19

    (9) E -> idNombre F .

    $end            reduce using rule 9 (E -> idNombre F .)


state 20

    (10) F -> valueNombre . G
    (11) G -> . text H

    text            shift and go to state 22

    G                              shift and go to state 21

state 21

    (10) F -> valueNombre G .

    $end            reduce using rule 10 (F -> valueNombre G .)


state 22

    (11) G -> text . H
    (12) H -> . text H
    (13) H -> . idEmail I

    text            shift and go to state 23
    idEmail         shift and go to state 25

    H                              shift and go to state 24

state 23

    (12) H -> text . H
    (12) H -> . text H
    (13) H -> . idEmail I

    text            shift and go to state 23
    idEmail         shift and go to state 25

    H                              shift and go to state 26

state 24

    (11) G -> text H .

    $end            reduce using rule 11 (G -> text H .)


state 25

    (13) H -> idEmail . I
    (14) I -> . valueEmail J

    valueEmail      shift and go to state 28

    I                              shift and go to state 27

state 26

    (12) H -> text H .

    $end            reduce using rule 12 (H -> text H .)


state 27

    (13) H -> idEmail I .

    $end            reduce using rule 13 (H -> idEmail I .)


state 28

    (14) I -> valueEmail . J
    (15) J -> . text K

    text            shift and go to state 30

    J                              shift and go to state 29

state 29

    (14) I -> valueEmail J .

    $end            reduce using rule 14 (I -> valueEmail J .)


state 30

    (15) J -> text . K
    (16) K -> . text K
    (17) K -> . idTelefono L

    text            shift and go to state 31
    idTelefono      shift and go to state 33

    K                              shift and go to state 32

state 31

    (16) K -> text . K
    (16) K -> . text K
    (17) K -> . idTelefono L

    text            shift and go to state 31
    idTelefono      shift and go to state 33

    K                              shift and go to state 34

state 32

    (15) J -> text K .

    $end            reduce using rule 15 (J -> text K .)


state 33

    (17) K -> idTelefono . L
    (18) L -> . valueTelefono A

    valueTelefono   shift and go to state 36

    L                              shift and go to state 35

state 34

    (16) K -> text K .

    $end            reduce using rule 16 (K -> text K .)


state 35

    (17) K -> idTelefono L .

    $end            reduce using rule 17 (K -> idTelefono L .)


state 36

    (18) L -> valueTelefono . A
    (2) A -> . text B

    text            shift and go to state 4

    A                              shift and go to state 37

state 37

    (18) L -> valueTelefono A .

    $end            reduce using rule 18 (L -> valueTelefono A .)

